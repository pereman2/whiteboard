{"ast":null,"code":"var _jsxFileName = \"/home/pereman2/projects/tutoronline/src/UI/Board.js\";\nimport React from 'react';\nimport './Board.css';\n\nfunction getMousePos(canvas, evt) {\n  return {\n    x: evt.clientX,\n    y: evt.clientY\n  };\n}\n\nfunction mouseDown(e) {}\n\nclass Board extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.mouseDown = event => {\n      let canvas = document.querySelector('#Board');\n      var pos = getMousePos(canvas, event);\n      this.setState({\n        isDown: true\n      });\n    };\n\n    this.mouseMove = event => {\n      if (this.state.isDown) {\n        let canvas = document.querySelector('#Board');\n        var pos = getMousePos(canvas, event);\n        var rect = canvas.getBoundingClientRect();\n        let ctx = canvas.getContext('2d');\n        ctx.beginPath();\n        ctx.arc(pos.x - rect.left, pos.y - rect.top, 9, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n      }\n    };\n\n    this.draw = event => {\n      let canvas = document.querySelector('#Board');\n      var pos = getMousePos(canvas, event);\n      var rect = canvas.getBoundingClientRect();\n      let ctx = canvas.getContext('2d');\n      ctx.beginPath();\n      ctx.arc(pos.x - rect.left, pos.y - rect.top, 9, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n    };\n\n    this.reset = event => {\n      let canvas = document.querySelector('#Board');\n      let ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, 1200, 800);\n    };\n\n    this.state = {\n      isDown: false\n    };\n  }\n\n  componentDidMount() {\n    let canvas = document.querySelector('#Board');\n    canvas.addEventListener('mousedown', e => this.mouseDown(e), false);\n    canvas.addEventListener('mousemove', e => this.mouseDown(e), false);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"Board\",\n      onMouseMove: e => this.draw(e),\n      height: \"700px\",\n      width: \"700px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => this.reset(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Reset\"));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/pereman2/projects/tutoronline/src/UI/Board.js"],"names":["React","getMousePos","canvas","evt","x","clientX","y","clientY","mouseDown","e","Board","Component","constructor","props","context","event","document","querySelector","pos","setState","isDown","mouseMove","state","rect","getBoundingClientRect","ctx","getContext","beginPath","arc","left","top","Math","PI","fill","stroke","draw","reset","clearRect","componentDidMount","addEventListener","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Board.css';\nfunction getMousePos(canvas, evt) {\n    return {\n      x: evt.clientX,\n      y: evt.clientY\n    };\n}\nfunction mouseDown(e) {\n\n}\nclass Board extends React.Component{\n    constructor(props, context) {\n        super(props, context)\n        this.state = {\n          isDown: false,\n        }\n      }\n    componentDidMount() {\n        let canvas = document.querySelector('#Board');\n        canvas.addEventListener('mousedown', (e) => this.mouseDown(e), false);\n        canvas.addEventListener('mousemove', (e) => this.mouseDown(e), false);\n    }\n    mouseDown = event => {\n        let canvas = document.querySelector('#Board');\n        var pos = getMousePos(canvas, event);\n        this.setState({ isDown: true });\n    }\n    mouseMove = event => {\n        if(this.state.isDown) {\n            let canvas = document.querySelector('#Board');\n            var pos = getMousePos(canvas, event);\n            var rect = canvas.getBoundingClientRect();\n\n            let ctx = canvas.getContext('2d');\n            ctx.beginPath();\n            ctx.arc(pos.x - rect.left, pos.y - rect.top, 9, 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n    }\n    draw = event => {\n        let canvas = document.querySelector('#Board');\n        var pos = getMousePos(canvas, event);\n        var rect = canvas.getBoundingClientRect();\n\n        let ctx = canvas.getContext('2d');\n        ctx.beginPath();\n        ctx.arc(pos.x - rect.left, pos.y - rect.top, 9, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n    }\n    reset = event => {\n        let canvas = document.querySelector('#Board');\n        let ctx = canvas.getContext('2d');\n\n        ctx.clearRect(0,0,1200,800);\n    }\n    render() {\n        return (\n            <div className=\"Board\">\n                <canvas id=\"Board\" onMouseMove={(e) => this.draw(e)} height='700px' width='700px'></canvas>\n                <button onClick={(e) => this.reset(e)}>Reset</button>\n            </div>\n            \n        );\n    }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}