{"ast":null,"code":"var _jsxFileName = \"/home/pereman2/projects/tutoronline/src/UI/Board.js\";\nimport React from 'react';\nimport './Board.css';\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.draw = event => {\n      let canvas = document.querySelector('#Board');\n      var rect = canvas.getBoundingClientRect();\n      var difx = window.innerWidth - canvas.width;\n      var dify = window.innerHeight - canvas.height;\n      let x = Math.round(event.screenX * (canvas.width / canvas.offsetWidth));\n      let y = Math.round(event.screenY * (canvas.height / canvas.offsetHeight));\n      var displayX = Math.round(x * (canvas.offsetWidth / canvas.width));\n      var displayY = Math.round(y * (canvas.offsetHeight / canvas.height));\n      console.log(difx + ' ' + dify);\n      let ctx = canvas.getContext('2d');\n      ctx.fillRect(x, y, 1, 1);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"Board\",\n      onMouseMove: e => this.draw(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/pereman2/projects/tutoronline/src/UI/Board.js"],"names":["React","Board","Component","draw","event","canvas","document","querySelector","rect","getBoundingClientRect","difx","window","innerWidth","width","dify","innerHeight","height","x","Math","round","screenX","offsetWidth","y","screenY","offsetHeight","displayX","displayY","console","log","ctx","getContext","fillRect","render","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAmC;AAAA;AAAA;;AAAA,SAC/BC,IAD+B,GACxBC,KAAK,IAAI;AACZ,UAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACA,UAAIC,IAAI,GAAGH,MAAM,CAACI,qBAAP,EAAX;AACA,UAAIC,IAAI,GAAGC,MAAM,CAACC,UAAP,GAAoBP,MAAM,CAACQ,KAAtC;AACA,UAAIC,IAAI,GAAGH,MAAM,CAACI,WAAP,GAAqBV,MAAM,CAACW,MAAvC;AACA,UAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAYf,KAAK,CAACgB,OAAN,IAAiBf,MAAM,CAACQ,KAAP,GAAeR,MAAM,CAACgB,WAAvC,CAAZ,CAAR;AACA,UAAIC,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAYf,KAAK,CAACmB,OAAN,IAAiBlB,MAAM,CAACW,MAAP,GAAgBX,MAAM,CAACmB,YAAxC,CAAZ,CAAR;AACA,UAAIC,QAAQ,GAAGP,IAAI,CAACC,KAAL,CAAYF,CAAC,IAAIZ,MAAM,CAACgB,WAAP,GAAqBhB,MAAM,CAACQ,KAAhC,CAAb,CAAf;AACA,UAAIa,QAAQ,GAAGR,IAAI,CAACC,KAAL,CAAYG,CAAC,IAAIjB,MAAM,CAACmB,YAAP,GAAsBnB,MAAM,CAACW,MAAjC,CAAb,CAAf;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAI,GAAG,GAAP,GAAaI,IAAzB;AACA,UAAIe,GAAG,GAAGxB,MAAM,CAACyB,UAAP,CAAkB,IAAlB,CAAV;AACAD,MAAAA,GAAG,CAACE,QAAJ,CAAad,CAAb,EAAeK,CAAf,EAAiB,CAAjB,EAAmB,CAAnB;AACH,KAd8B;AAAA;;AAe/BU,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,WAAW,EAAGC,CAAD,IAAO,KAAK9B,IAAL,CAAU8B,CAAV,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AArB8B;;AAwBnC,eAAehC,KAAf","sourcesContent":["import React from 'react';\nimport './Board.css';\n\nclass Board extends React.Component{\n    draw = event => {\n        let canvas = document.querySelector('#Board');\n        var rect = canvas.getBoundingClientRect();\n        var difx = window.innerWidth - canvas.width;\n        var dify = window.innerHeight - canvas.height;\n        let x = Math.round( event.screenX * (canvas.width / canvas.offsetWidth) );\n        let y = Math.round( event.screenY * (canvas.height / canvas.offsetHeight) );\n        var displayX = Math.round( x * (canvas.offsetWidth / canvas.width) ); \n        var displayY = Math.round( y * (canvas.offsetHeight / canvas.height) ); \n        \n        console.log(difx + ' ' + dify);\n        let ctx = canvas.getContext('2d');\n        ctx.fillRect(x,y,1,1);\n    }\n    render() {\n        return (\n            <div className=\"Board\">\n                <canvas id=\"Board\" onMouseMove={(e) => this.draw(e)}></canvas>\n            </div>\n        );\n    }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}